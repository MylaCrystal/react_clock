{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getFormattedTime","Date","toUTCString","slice","Clock","state","currentTime","interval","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","timerId","handleClick","handleContextMenu","event","preventDefault","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAEA,SAASA,IACP,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAWvC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,YAAaN,KAFjB,EAKEO,SAA0B,KAL5B,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,SAAWE,OAAOC,aAAY,WACjC,EAAKC,SAAS,CACZL,YAAaN,MAGfY,QAAQC,KAAK,EAAKR,MAAMC,eACvB,OAdP,gCAiBE,SAAmBQ,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WAErCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cApBzE,kCAwBE,WACMP,KAAKD,UACPW,cAAcV,KAAKD,YA1BzB,oBA8BE,WACE,IAAQD,EAAgBE,KAAKH,MAArBC,YACAS,EAAcP,KAAKQ,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGb,EAAYH,OAAO,YA3C9B,GAA2BiB,aCV3B,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWrB,OAAO,GAE3C,MAAM,SAAN,OAAgBmB,GAQX,IAAMG,EAAb,4MACEpB,MAAQ,CACNqB,UAAU,EACVX,UAAW,WAHf,EAMEY,QAAyB,KAN3B,EAwBEC,YAAc,WACZ,EAAKjB,SAAS,CAAEe,UAAU,KAzB9B,EA4BEG,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKpB,SAAS,CAAEe,UAAU,KA9B9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAezB,KAAKqB,mBAE9CG,SAASC,iBAAiB,QAASzB,KAAKoB,aAExCpB,KAAKmB,QAAUlB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEI,UAAWM,QAC1B,QAfP,kCAkBE,WACMb,KAAKmB,SACPlB,OAAOS,cAAcV,KAAKmB,WApBhC,oBAiCE,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECX,KAAKH,MAAMqB,UAAY,cAAC,EAAD,CAAOX,UAAWP,KAAKH,MAAMU,mBAtC7D,GAAyBK,aCZzBc,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.aef3a5e8.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getFormattedTime() {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\ninterface Props {\n  clockName: string;\n}\n\ninterface State {\n  currentTime: string;\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    currentTime: getFormattedTime(),\n  };\n\n  interval: number | null = null;\n\n  componentDidMount() {\n    this.interval = window.setInterval(() => {\n      this.setState({\n        currentTime: getFormattedTime(),\n      });\n      // eslint-disable-next-line no-console\n      console.info(this.state.currentTime);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    const { currentTime } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime.slice(-8)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n\n    document.addEventListener('click', this.handleClick);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}